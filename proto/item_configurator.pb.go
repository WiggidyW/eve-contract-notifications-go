// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: item_configurator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Query int32

const (
	Query_TRUE  Query = 0 // items for which value is true
	Query_FALSE Query = 1 // items for which value is false
	Query_BOTH  Query = 2 // all items
)

// Enum value maps for Query.
var (
	Query_name = map[int32]string{
		0: "TRUE",
		1: "FALSE",
		2: "BOTH",
	}
	Query_value = map[string]int32{
		"TRUE":  0,
		"FALSE": 1,
		"BOTH":  2,
	}
)

func (x Query) Enum() *Query {
	p := new(Query)
	*p = x
	return p
}

func (x Query) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Query) Descriptor() protoreflect.EnumDescriptor {
	return file_item_configurator_proto_enumTypes[0].Descriptor()
}

func (Query) Type() protoreflect.EnumType {
	return &file_item_configurator_proto_enumTypes[0]
}

func (x Query) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Query.Descriptor instead.
func (Query) EnumDescriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{0}
}

type AuthKind int32

const (
	AuthKind_READ  AuthKind = 0 // read-only access
	AuthKind_WRITE AuthKind = 1 // read-write access
)

// Enum value maps for AuthKind.
var (
	AuthKind_name = map[int32]string{
		0: "READ",
		1: "WRITE",
	}
	AuthKind_value = map[string]int32{
		"READ":  0,
		"WRITE": 1,
	}
)

func (x AuthKind) Enum() *AuthKind {
	p := new(AuthKind)
	*p = x
	return p
}

func (x AuthKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthKind) Descriptor() protoreflect.EnumDescriptor {
	return file_item_configurator_proto_enumTypes[1].Descriptor()
}

func (AuthKind) Type() protoreflect.EnumType {
	return &file_item_configurator_proto_enumTypes[1]
}

func (x AuthKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthKind.Descriptor instead.
func (AuthKind) EnumDescriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{1}
}

type AuthScope int32

const (
	AuthScope_ITEMS      AuthScope = 0 // access to items
	AuthScope_CHARACTERS AuthScope = 1 // access to characters
	AuthScope_CONTRACTS  AuthScope = 2 // access to contracts
)

// Enum value maps for AuthScope.
var (
	AuthScope_name = map[int32]string{
		0: "ITEMS",
		1: "CHARACTERS",
		2: "CONTRACTS",
	}
	AuthScope_value = map[string]int32{
		"ITEMS":      0,
		"CHARACTERS": 1,
		"CONTRACTS":  2,
	}
)

func (x AuthScope) Enum() *AuthScope {
	p := new(AuthScope)
	*p = x
	return p
}

func (x AuthScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthScope) Descriptor() protoreflect.EnumDescriptor {
	return file_item_configurator_proto_enumTypes[2].Descriptor()
}

func (AuthScope) Type() protoreflect.EnumType {
	return &file_item_configurator_proto_enumTypes[2]
}

func (x AuthScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthScope.Descriptor instead.
func (AuthScope) EnumDescriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{2}
}

type ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId         uint32            `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Enabled        bool              `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	JsonIdx        map[string]uint32 `protobuf:"bytes,3,rep,name=json_idx,json=jsonIdx,proto3" json:"json_idx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Name           string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	MarketGroupIdx uint32            `protobuf:"varint,5,opt,name=market_group_idx,json=marketGroupIdx,proto3" json:"market_group_idx,omitempty"`
	GroupIdx       uint32            `protobuf:"varint,6,opt,name=group_idx,json=groupIdx,proto3" json:"group_idx,omitempty"`
	CategoryIdx    uint32            `protobuf:"varint,7,opt,name=category_idx,json=categoryIdx,proto3" json:"category_idx,omitempty"`
}

func (x *ListItem) Reset() {
	*x = ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListItem) ProtoMessage() {}

func (x *ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListItem.ProtoReflect.Descriptor instead.
func (*ListItem) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{0}
}

func (x *ListItem) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ListItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ListItem) GetJsonIdx() map[string]uint32 {
	if x != nil {
		return x.JsonIdx
	}
	return nil
}

func (x *ListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListItem) GetMarketGroupIdx() uint32 {
	if x != nil {
		return x.MarketGroupIdx
	}
	return 0
}

func (x *ListItem) GetGroupIdx() uint32 {
	if x != nil {
		return x.GroupIdx
	}
	return 0
}

func (x *ListItem) GetCategoryIdx() uint32 {
	if x != nil {
		return x.CategoryIdx
	}
	return 0
}

type ListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*ListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Json         []string    `protobuf:"bytes,2,rep,name=json,proto3" json:"json,omitempty"`
	MarketGroups []string    `protobuf:"bytes,3,rep,name=market_groups,json=marketGroups,proto3" json:"market_groups,omitempty"`
	Groups       []string    `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Categories   []string    `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty"`
	RefreshToken string      `protobuf:"bytes,6,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // new ESI refresh token (for authentication)
	Authorized   bool        `protobuf:"varint,7,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // whether the character from the token is authorized
}

func (x *ListRep) Reset() {
	*x = ListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRep) ProtoMessage() {}

func (x *ListRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRep.ProtoReflect.Descriptor instead.
func (*ListRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{1}
}

func (x *ListRep) GetItems() []*ListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListRep) GetJson() []string {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *ListRep) GetMarketGroups() []string {
	if x != nil {
		return x.MarketGroups
	}
	return nil
}

func (x *ListRep) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ListRep) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ListRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                        // name of the list
	RefreshToken       string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`                                                    // ESI refresh token (for authentication)
	IncludeEnabled     Query  `protobuf:"varint,3,opt,name=include_enabled,json=includeEnabled,proto3,enum=item_configurator_proto.Query" json:"include_enabled,omitempty"`          // whether to include enabled items
	IncludeConfigured  Query  `protobuf:"varint,4,opt,name=include_configured,json=includeConfigured,proto3,enum=item_configurator_proto.Query" json:"include_configured,omitempty"` // whether to include configured items
	IncludeJson        bool   `protobuf:"varint,5,opt,name=include_json,json=includeJson,proto3" json:"include_json,omitempty"`
	Language           string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	IncludeName        bool   `protobuf:"varint,7,opt,name=include_name,json=includeName,proto3" json:"include_name,omitempty"`
	IncludeMarketGroup bool   `protobuf:"varint,8,opt,name=include_market_group,json=includeMarketGroup,proto3" json:"include_market_group,omitempty"`
	IncludeGroup       bool   `protobuf:"varint,9,opt,name=include_group,json=includeGroup,proto3" json:"include_group,omitempty"`
	IncludeCategory    bool   `protobuf:"varint,10,opt,name=include_category,json=includeCategory,proto3" json:"include_category,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{2}
}

func (x *ListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ListReq) GetIncludeEnabled() Query {
	if x != nil {
		return x.IncludeEnabled
	}
	return Query_TRUE
}

func (x *ListReq) GetIncludeConfigured() Query {
	if x != nil {
		return x.IncludeConfigured
	}
	return Query_TRUE
}

func (x *ListReq) GetIncludeJson() bool {
	if x != nil {
		return x.IncludeJson
	}
	return false
}

func (x *ListReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ListReq) GetIncludeName() bool {
	if x != nil {
		return x.IncludeName
	}
	return false
}

func (x *ListReq) GetIncludeMarketGroup() bool {
	if x != nil {
		return x.IncludeMarketGroup
	}
	return false
}

func (x *ListReq) GetIncludeGroup() bool {
	if x != nil {
		return x.IncludeGroup
	}
	return false
}

func (x *ListReq) GetIncludeCategory() bool {
	if x != nil {
		return x.IncludeCategory
	}
	return false
}

type UpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId  uint32            `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Enabled bool              `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	JsonIdx map[string]uint32 `protobuf:"bytes,3,rep,name=json_idx,json=jsonIdx,proto3" json:"json_idx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UpdateItem) Reset() {
	*x = UpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItem) ProtoMessage() {}

func (x *UpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItem.ProtoReflect.Descriptor instead.
func (*UpdateItem) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItem) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *UpdateItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateItem) GetJsonIdx() map[string]uint32 {
	if x != nil {
		return x.JsonIdx
	}
	return nil
}

type UpdateRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // new ESI refresh token (for authentication)
	Authorized   bool   `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // whether the character from the token is authorized
}

func (x *UpdateRep) Reset() {
	*x = UpdateRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRep) ProtoMessage() {}

func (x *UpdateRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRep.ProtoReflect.Descriptor instead.
func (*UpdateRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *UpdateRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

// Note: Don't delete JSON when things are disabled, keep storing it
type UpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                     // name of the list
	RefreshToken string        `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // ESI refresh token (for authentication)
	Items        []*UpdateItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Json         []string      `protobuf:"bytes,4,rep,name=json,proto3" json:"json,omitempty"`
}

func (x *UpdateReq) Reset() {
	*x = UpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReq) ProtoMessage() {}

func (x *UpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReq.ProtoReflect.Descriptor instead.
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *UpdateReq) GetItems() []*UpdateItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpdateReq) GetJson() []string {
	if x != nil {
		return x.Json
	}
	return nil
}

type ListCharactersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []string `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	RefreshToken string   `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // new ESI refresh token (for authentication)
	Authorized   bool     `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // whether the character from the token is authorized
}

func (x *ListCharactersRep) Reset() {
	*x = ListCharactersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCharactersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersRep) ProtoMessage() {}

func (x *ListCharactersRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersRep.ProtoReflect.Descriptor instead.
func (*ListCharactersRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{6}
}

func (x *ListCharactersRep) GetCharacters() []string {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ListCharactersRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ListCharactersRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type ListCharactersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                    // name of the list
	AuthKind     AuthKind  `protobuf:"varint,2,opt,name=auth_kind,json=authKind,proto3,enum=item_configurator_proto.AuthKind" json:"auth_kind,omitempty"`     // false for read, true for write
	AuthScope    AuthScope `protobuf:"varint,3,opt,name=auth_scope,json=authScope,proto3,enum=item_configurator_proto.AuthScope" json:"auth_scope,omitempty"` // false for items, true for characters
	RefreshToken string    `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`                                // ESI refresh token (for authentication)
}

func (x *ListCharactersReq) Reset() {
	*x = ListCharactersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCharactersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersReq) ProtoMessage() {}

func (x *ListCharactersReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersReq.ProtoReflect.Descriptor instead.
func (*ListCharactersReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{7}
}

func (x *ListCharactersReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCharactersReq) GetAuthKind() AuthKind {
	if x != nil {
		return x.AuthKind
	}
	return AuthKind_READ
}

func (x *ListCharactersReq) GetAuthScope() AuthScope {
	if x != nil {
		return x.AuthScope
	}
	return AuthScope_ITEMS
}

func (x *ListCharactersReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type AddCharactersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // new ESI refresh token (for authentication)
	Authorized   bool   `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // whether the character from the token is authorized
}

func (x *AddCharactersRep) Reset() {
	*x = AddCharactersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCharactersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCharactersRep) ProtoMessage() {}

func (x *AddCharactersRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCharactersRep.ProtoReflect.Descriptor instead.
func (*AddCharactersRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{8}
}

func (x *AddCharactersRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AddCharactersRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type AddCharactersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                    // name of the list
	AuthKind     AuthKind  `protobuf:"varint,2,opt,name=auth_kind,json=authKind,proto3,enum=item_configurator_proto.AuthKind" json:"auth_kind,omitempty"`     // false for read, true for write
	AuthScope    AuthScope `protobuf:"varint,3,opt,name=auth_scope,json=authScope,proto3,enum=item_configurator_proto.AuthScope" json:"auth_scope,omitempty"` // false for items, true for characters
	RefreshToken string    `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`                                // ESI refresh token (for authentication)
	Characters   []string  `protobuf:"bytes,5,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *AddCharactersReq) Reset() {
	*x = AddCharactersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCharactersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCharactersReq) ProtoMessage() {}

func (x *AddCharactersReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCharactersReq.ProtoReflect.Descriptor instead.
func (*AddCharactersReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{9}
}

func (x *AddCharactersReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCharactersReq) GetAuthKind() AuthKind {
	if x != nil {
		return x.AuthKind
	}
	return AuthKind_READ
}

func (x *AddCharactersReq) GetAuthScope() AuthScope {
	if x != nil {
		return x.AuthScope
	}
	return AuthScope_ITEMS
}

func (x *AddCharactersReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AddCharactersReq) GetCharacters() []string {
	if x != nil {
		return x.Characters
	}
	return nil
}

type DelCharactersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // new ESI refresh token (for authentication)
	Authorized   bool   `protobuf:"varint,2,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // whether the character from the token is authorized
}

func (x *DelCharactersRep) Reset() {
	*x = DelCharactersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCharactersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCharactersRep) ProtoMessage() {}

func (x *DelCharactersRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCharactersRep.ProtoReflect.Descriptor instead.
func (*DelCharactersRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{10}
}

func (x *DelCharactersRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *DelCharactersRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

type DelCharactersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                    // name of the list
	AuthKind     AuthKind  `protobuf:"varint,2,opt,name=auth_kind,json=authKind,proto3,enum=item_configurator_proto.AuthKind" json:"auth_kind,omitempty"`     // false for read, true for write
	AuthScope    AuthScope `protobuf:"varint,3,opt,name=auth_scope,json=authScope,proto3,enum=item_configurator_proto.AuthScope" json:"auth_scope,omitempty"` // false for items, true for characters
	RefreshToken string    `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`                                // ESI refresh token (for authentication)
	Characters   []string  `protobuf:"bytes,5,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *DelCharactersReq) Reset() {
	*x = DelCharactersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCharactersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCharactersReq) ProtoMessage() {}

func (x *DelCharactersReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCharactersReq.ProtoReflect.Descriptor instead.
func (*DelCharactersReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{11}
}

func (x *DelCharactersReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DelCharactersReq) GetAuthKind() AuthKind {
	if x != nil {
		return x.AuthKind
	}
	return AuthKind_READ
}

func (x *DelCharactersReq) GetAuthScope() AuthScope {
	if x != nil {
		return x.AuthScope
	}
	return AuthScope_ITEMS
}

func (x *DelCharactersReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *DelCharactersReq) GetCharacters() []string {
	if x != nil {
		return x.Characters
	}
	return nil
}

type BuybackContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EsiContract   *ExchangeContract `protobuf:"bytes,1,opt,name=esi_contract,json=esiContract,proto3" json:"esi_contract,omitempty"`
	CheckContract *Rep              `protobuf:"bytes,2,opt,name=check_contract,json=checkContract,proto3" json:"check_contract,omitempty"`
	BuyContract   *Rep              `protobuf:"bytes,3,opt,name=buy_contract,json=buyContract,proto3" json:"buy_contract,omitempty"`
	HashCode      string            `protobuf:"bytes,4,opt,name=hash_code,json=hashCode,proto3" json:"hash_code,omitempty"` // hash code of the contract
}

func (x *BuybackContract) Reset() {
	*x = BuybackContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContract) ProtoMessage() {}

func (x *BuybackContract) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContract.ProtoReflect.Descriptor instead.
func (*BuybackContract) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{12}
}

func (x *BuybackContract) GetEsiContract() *ExchangeContract {
	if x != nil {
		return x.EsiContract
	}
	return nil
}

func (x *BuybackContract) GetCheckContract() *Rep {
	if x != nil {
		return x.CheckContract
	}
	return nil
}

func (x *BuybackContract) GetBuyContract() *Rep {
	if x != nil {
		return x.BuyContract
	}
	return nil
}

func (x *BuybackContract) GetHashCode() string {
	if x != nil {
		return x.HashCode
	}
	return ""
}

type BuybackContractsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeItems bool   `protobuf:"varint,1,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
	IncludeCheck bool   `protobuf:"varint,2,opt,name=include_check,json=includeCheck,proto3" json:"include_check,omitempty"`
	IncludeBuy   bool   `protobuf:"varint,3,opt,name=include_buy,json=includeBuy,proto3" json:"include_buy,omitempty"`
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // ESI refresh token (for authentication)
	Language     string `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`                             // language for the contract
}

func (x *BuybackContractsReq) Reset() {
	*x = BuybackContractsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractsReq) ProtoMessage() {}

func (x *BuybackContractsReq) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractsReq.ProtoReflect.Descriptor instead.
func (*BuybackContractsReq) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{13}
}

func (x *BuybackContractsReq) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

func (x *BuybackContractsReq) GetIncludeCheck() bool {
	if x != nil {
		return x.IncludeCheck
	}
	return false
}

func (x *BuybackContractsReq) GetIncludeBuy() bool {
	if x != nil {
		return x.IncludeBuy
	}
	return false
}

func (x *BuybackContractsReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *BuybackContractsReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type BuybackContractsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contracts    []*BuybackContract `protobuf:"bytes,1,rep,name=contracts,proto3" json:"contracts,omitempty"`
	RefreshToken string             `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // ESI refresh token (for authentication)
	Authorized   bool               `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`                        // true if the refresh token is authorized
}

func (x *BuybackContractsRep) Reset() {
	*x = BuybackContractsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_item_configurator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuybackContractsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuybackContractsRep) ProtoMessage() {}

func (x *BuybackContractsRep) ProtoReflect() protoreflect.Message {
	mi := &file_item_configurator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuybackContractsRep.ProtoReflect.Descriptor instead.
func (*BuybackContractsRep) Descriptor() ([]byte, []int) {
	return file_item_configurator_proto_rawDescGZIP(), []int{14}
}

func (x *BuybackContractsRep) GetContracts() []*BuybackContract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *BuybackContractsRep) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *BuybackContractsRep) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

var File_item_configurator_proto protoreflect.FileDescriptor

var file_item_configurator_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0d, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc2, 0x02, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x49, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x78, 0x1a, 0x3a, 0x0a, 0x0c, 0x4a, 0x73,
	0x6f, 0x6e, 0x49, 0x64, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf8, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x64, 0x22, 0xbe, 0x03, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x4d, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x11, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4a, 0x73, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0xc8, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x4b, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x78,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4a, 0x73, 0x6f, 0x6e,
	0x49, 0x64, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x78, 0x1a, 0x3a, 0x0a, 0x0c, 0x4a, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x78, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22,
	0x93, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22,
	0xcf, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x57, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0x57, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x41, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x65, 0x73, 0x69,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x0b, 0x65, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x39,
	0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x62, 0x75, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x62, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x70, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x01,
	0x0a, 0x13, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x75, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x12, 0x46, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x2a, 0x26, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x08, 0x0a, 0x04, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x4c,
	0x53, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x02, 0x2a, 0x1f,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45,
	0x41, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x2a,
	0x35, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x54, 0x45, 0x4d, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x52, 0x41,
	0x43, 0x54, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x41, 0x43, 0x54, 0x53, 0x10, 0x02, 0x32, 0xd8, 0x04, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x12, 0x4a, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x68, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x70, 0x12, 0x65, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x29, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x65, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x2e, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x12, 0x6e, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x75, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_item_configurator_proto_rawDescOnce sync.Once
	file_item_configurator_proto_rawDescData = file_item_configurator_proto_rawDesc
)

func file_item_configurator_proto_rawDescGZIP() []byte {
	file_item_configurator_proto_rawDescOnce.Do(func() {
		file_item_configurator_proto_rawDescData = protoimpl.X.CompressGZIP(file_item_configurator_proto_rawDescData)
	})
	return file_item_configurator_proto_rawDescData
}

var file_item_configurator_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_item_configurator_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_item_configurator_proto_goTypes = []interface{}{
	(Query)(0),                  // 0: item_configurator_proto.Query
	(AuthKind)(0),               // 1: item_configurator_proto.AuthKind
	(AuthScope)(0),              // 2: item_configurator_proto.AuthScope
	(*ListItem)(nil),            // 3: item_configurator_proto.ListItem
	(*ListRep)(nil),             // 4: item_configurator_proto.ListRep
	(*ListReq)(nil),             // 5: item_configurator_proto.ListReq
	(*UpdateItem)(nil),          // 6: item_configurator_proto.UpdateItem
	(*UpdateRep)(nil),           // 7: item_configurator_proto.UpdateRep
	(*UpdateReq)(nil),           // 8: item_configurator_proto.UpdateReq
	(*ListCharactersRep)(nil),   // 9: item_configurator_proto.ListCharactersRep
	(*ListCharactersReq)(nil),   // 10: item_configurator_proto.ListCharactersReq
	(*AddCharactersRep)(nil),    // 11: item_configurator_proto.AddCharactersRep
	(*AddCharactersReq)(nil),    // 12: item_configurator_proto.AddCharactersReq
	(*DelCharactersRep)(nil),    // 13: item_configurator_proto.DelCharactersRep
	(*DelCharactersReq)(nil),    // 14: item_configurator_proto.DelCharactersReq
	(*BuybackContract)(nil),     // 15: item_configurator_proto.BuybackContract
	(*BuybackContractsReq)(nil), // 16: item_configurator_proto.BuybackContractsReq
	(*BuybackContractsRep)(nil), // 17: item_configurator_proto.BuybackContractsRep
	nil,                         // 18: item_configurator_proto.ListItem.JsonIdxEntry
	nil,                         // 19: item_configurator_proto.UpdateItem.JsonIdxEntry
	(*ExchangeContract)(nil),    // 20: weve_esi_proto.ExchangeContract
	(*Rep)(nil),                 // 21: buyback_proto.Rep
}
var file_item_configurator_proto_depIdxs = []int32{
	18, // 0: item_configurator_proto.ListItem.json_idx:type_name -> item_configurator_proto.ListItem.JsonIdxEntry
	3,  // 1: item_configurator_proto.ListRep.items:type_name -> item_configurator_proto.ListItem
	0,  // 2: item_configurator_proto.ListReq.include_enabled:type_name -> item_configurator_proto.Query
	0,  // 3: item_configurator_proto.ListReq.include_configured:type_name -> item_configurator_proto.Query
	19, // 4: item_configurator_proto.UpdateItem.json_idx:type_name -> item_configurator_proto.UpdateItem.JsonIdxEntry
	6,  // 5: item_configurator_proto.UpdateReq.items:type_name -> item_configurator_proto.UpdateItem
	1,  // 6: item_configurator_proto.ListCharactersReq.auth_kind:type_name -> item_configurator_proto.AuthKind
	2,  // 7: item_configurator_proto.ListCharactersReq.auth_scope:type_name -> item_configurator_proto.AuthScope
	1,  // 8: item_configurator_proto.AddCharactersReq.auth_kind:type_name -> item_configurator_proto.AuthKind
	2,  // 9: item_configurator_proto.AddCharactersReq.auth_scope:type_name -> item_configurator_proto.AuthScope
	1,  // 10: item_configurator_proto.DelCharactersReq.auth_kind:type_name -> item_configurator_proto.AuthKind
	2,  // 11: item_configurator_proto.DelCharactersReq.auth_scope:type_name -> item_configurator_proto.AuthScope
	20, // 12: item_configurator_proto.BuybackContract.esi_contract:type_name -> weve_esi_proto.ExchangeContract
	21, // 13: item_configurator_proto.BuybackContract.check_contract:type_name -> buyback_proto.Rep
	21, // 14: item_configurator_proto.BuybackContract.buy_contract:type_name -> buyback_proto.Rep
	15, // 15: item_configurator_proto.BuybackContractsRep.contracts:type_name -> item_configurator_proto.BuybackContract
	8,  // 16: item_configurator_proto.ItemConfigurator.Update:input_type -> item_configurator_proto.UpdateReq
	5,  // 17: item_configurator_proto.ItemConfigurator.List:input_type -> item_configurator_proto.ListReq
	10, // 18: item_configurator_proto.ItemConfigurator.ListCharacters:input_type -> item_configurator_proto.ListCharactersReq
	12, // 19: item_configurator_proto.ItemConfigurator.AddCharacters:input_type -> item_configurator_proto.AddCharactersReq
	14, // 20: item_configurator_proto.ItemConfigurator.DelCharacters:input_type -> item_configurator_proto.DelCharactersReq
	16, // 21: item_configurator_proto.ItemConfigurator.BuybackContracts:input_type -> item_configurator_proto.BuybackContractsReq
	7,  // 22: item_configurator_proto.ItemConfigurator.Update:output_type -> item_configurator_proto.UpdateRep
	4,  // 23: item_configurator_proto.ItemConfigurator.List:output_type -> item_configurator_proto.ListRep
	9,  // 24: item_configurator_proto.ItemConfigurator.ListCharacters:output_type -> item_configurator_proto.ListCharactersRep
	11, // 25: item_configurator_proto.ItemConfigurator.AddCharacters:output_type -> item_configurator_proto.AddCharactersRep
	13, // 26: item_configurator_proto.ItemConfigurator.DelCharacters:output_type -> item_configurator_proto.DelCharactersRep
	17, // 27: item_configurator_proto.ItemConfigurator.BuybackContracts:output_type -> item_configurator_proto.BuybackContractsRep
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_item_configurator_proto_init() }
func file_item_configurator_proto_init() {
	if File_item_configurator_proto != nil {
		return
	}
	file_weve_esi_proto_init()
	file_buyback_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_item_configurator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCharactersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCharactersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCharactersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCharactersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCharactersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCharactersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_item_configurator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuybackContractsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_item_configurator_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_item_configurator_proto_goTypes,
		DependencyIndexes: file_item_configurator_proto_depIdxs,
		EnumInfos:         file_item_configurator_proto_enumTypes,
		MessageInfos:      file_item_configurator_proto_msgTypes,
	}.Build()
	File_item_configurator_proto = out.File
	file_item_configurator_proto_rawDesc = nil
	file_item_configurator_proto_goTypes = nil
	file_item_configurator_proto_depIdxs = nil
}
